name: Release
permissions:
  contents: read # to fetch code (actions/checkout)
jobs:
  release:
    if: github.repository_owner == 'jenkins-x'
    runs-on: ubuntu-latest
    # Only this job needs packages:write for cosign to push signatures
    permissions:
      packages: write
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: "0"
        token: ${{ secrets.GIT_BOT_TOKEN }}
    - uses: fusion-engineering/setup-git-credentials@v2
      with:
        credentials: ${{ format('https://x-access-token:{0}@github.com/', secrets.GIT_BOT_TOKEN) }}
    - name: Run coverage
      run: make test-coverage
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: ./build/reports/cover.txt
    - id: prep
      name: next release version
      uses: jenkins-x-plugins/jx-release-version@v2.6.1
    - env:
        GITHUB_TOKEN: ${{ secrets.GIT_BOT_TOKEN }}
        REPO_NAME: ${{ github.event.repository.name }}
        VERSION: ${{ steps.prep.outputs.version }}
      name: changelog
      uses: docker://ghcr.io/jenkins-x/jx-changelog:0.0.47
      with:
        entrypoint: .github/workflows/jenkins-x/changelog.sh
    - env:
        VERSION: ${{ steps.prep.outputs.version }}
        GITHUB_TOKEN: ${{ secrets.GIT_BOT_TOKEN }}
        REPOSITORY: ${{ github.repository }}
        COSIGN_PWD: ${{secrets.COSIGN_PWD}}
        COSIGN_PRIVATE_KEY: ${{secrets.COSIGN_PRIVATE_KEY}}
      name: upload-binaries
      uses: docker://ghcr.io/jenkins-x/jx-goreleaser-image:0.0.1@sha256:75dde8a5d24f9e7ec58c8d52beed30af3763ed65071610486eabb424abbe5150
      with:
        entrypoint: .github/workflows/jenkins-x/upload-binaries.sh
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: jenkins-x
        password: ${{ secrets.GHCR_TOKEN }}
    - name: syft-installer
      uses: anchore/sbom-action/download-syft@v0.13.0
    - name: cosign-installer
      uses: sigstore/cosign-installer@v2.8.1
    - name: crane-installer
      uses: imjasonh/setup-crane@v0.2
    - name: Build and push jx-boot
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ./Dockerfile-boot
        platforms: linux/amd64,linux/arm64
        push: true
        build-args: |
          VERSION=${{ steps.prep.outputs.version }}
        tags: |
          ghcr.io/jenkins-x/jx-boot:latest
          ghcr.io/jenkins-x/jx-boot:${{ steps.prep.outputs.version }}
    - name: get image digest for jx boot
      env:
        VERSION: ${{ steps.prep.outputs.version }}
      run: |
        DIGEST_SHA_JX_BOOT=$(crane digest ghcr.io/jenkins-x/jx-boot:$VERSION)
        echo "DIGEST_SHA_JX_BOOT=${DIGEST_SHA_JX_BOOT}" >> $GITHUB_ENV
    - name: Sign the published Docker image for jx boot
      # ToDo(ankitm123): Remove this when this step works, for now we want this to unblock other releases
      continue-on-error: true
      env:
        COSIGN_PASSWORD: ${{secrets.COSIGN_PWD}}
        COSIGN_PRIVATE_KEY: ${{secrets.COSIGN_PRIVATE_KEY}}
        GITHUB_TOKEN: ${{ secrets.GIT_BOT_TOKEN }}
        # ToDo: We should change this to some other user, a test account pushing images and artifacts for jx org sounds wrong!
        GIT_USERNAME: jenkins-x-bot-test
        DOCKER_REGISTRY_ORG: jenkins-x
      run: |
        cosign sign --key=env://COSIGN_PRIVATE_KEY ghcr.io/"${DOCKER_REGISTRY_ORG}"/jx-boot@"${DIGEST_SHA_JX_BOOT}"
    - name: Generate and Push signed SBOM for jx-boot
      # ToDo(ankitm123): Remove this when this step works, for now we want this to unblock other releases
      continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GIT_BOT_TOKEN }}
        GIT_USERNAME: jenkins-x-bot-test
        DOCKER_REGISTRY_ORG: jenkins-x
        VERSION: ${{ steps.prep.outputs.version }}
        COSIGN_PASSWORD: ${{secrets.COSIGN_PWD}}
        COSIGN_PRIVATE_KEY: ${{secrets.COSIGN_PRIVATE_KEY}}
      run: |
        syft ghcr.io/$DOCKER_REGISTRY_ORG/jx-boot:$VERSION --scope all-layers -o spdx-json > sbom.json
        # This uploads the sbom
        cosign attach sbom --sbom sbom.json ghcr.io/${DOCKER_REGISTRY_ORG}/jx-boot@${DIGEST_SHA_JX_BOOT}
        # This signs the sbom
        cosign sign --key=env://COSIGN_PRIVATE_KEY --attachment sbom ghcr.io/${DOCKER_REGISTRY_ORG}/jx-boot@${DIGEST_SHA_JX_BOOT}
        rm -f sbom.json
    - name: Build and push jx
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64
        push: true
        build-args: |
          VERSION=${{ steps.prep.outputs.version }}
        tags: |
          ghcr.io/jenkins-x/jx:latest
          ghcr.io/jenkins-x/jx:${{ steps.prep.outputs.version }}
    - name: get image digest for jx
      env:
        VERSION: ${{ steps.prep.outputs.version }}
      run: |
        DIGEST_SHA_JX=$(crane digest ghcr.io/jenkins-x/jx:$VERSION)
        echo "DIGEST_SHA_JX=${DIGEST_SHA_JX}" >> $GITHUB_ENV
    - name: Sign the published Docker image for jx
      # ToDo(ankitm123): Remove this when this step works, for now we want this to unblock other releases
      continue-on-error: true
      env:
        COSIGN_PASSWORD: ${{secrets.COSIGN_PWD}}
        COSIGN_PRIVATE_KEY: ${{secrets.COSIGN_PRIVATE_KEY}}
        GITHUB_TOKEN: ${{ secrets.GIT_BOT_TOKEN }}
        # ToDo: We should change this to some other user, a test account pushing images and artifacts for jx org sounds wrong!
        GIT_USERNAME: jenkins-x-bot-test
        DOCKER_REGISTRY_ORG: jenkins-x
        REPO_NAME: ${{ github.event.repository.name }}
      run: |
        cosign sign --key=env://COSIGN_PRIVATE_KEY ghcr.io/$DOCKER_REGISTRY_ORG/$REPO_NAME@$DIGEST_SHA_JX
    - name: Generate and Push signed SBOM for jx
      # ToDo(ankitm123): Remove this when this step works, for now we want this to unblock other releases
      continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GIT_BOT_TOKEN }}
        GIT_USERNAME: jenkins-x-bot-test
        DOCKER_REGISTRY_ORG: jenkins-x
        VERSION: ${{ steps.prep.outputs.version }}
        REPO_NAME: ${{ github.event.repository.name }}
        COSIGN_PASSWORD: ${{secrets.COSIGN_PWD}}
        COSIGN_PRIVATE_KEY: ${{secrets.COSIGN_PRIVATE_KEY}}
      run: |
        syft ghcr.io/$DOCKER_REGISTRY_ORG/$REPO_NAME:$VERSION --scope all-layers -o spdx-json > sbom.json
        # This uploads the sbom
        cosign attach sbom --sbom sbom.json ghcr.io/${DOCKER_REGISTRY_ORG}/${REPO_NAME}@${DIGEST_SHA_JX}
        # This signs the sbom
        cosign sign --key=env://COSIGN_PRIVATE_KEY --attachment sbom sbom.json ghcr.io/${DOCKER_REGISTRY_ORG}/${REPO_NAME}@${DIGEST_SHA_JX}
  release2:
    if: github.repository_owner == 'jenkins-x'
    runs-on: ubuntu-latest
    needs: release
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: "0"
        token: ${{ secrets.GIT_BOT_TOKEN }}
    - id: getrelease
      name: getrelease
      uses: pozetroninc/github-action-get-latest-release@master
      with:
        repository: jenkins-x/jx
    - id: prep
      name: prep
      env:
        VERSION: ${{ steps.getrelease.outputs.release }}
      run: |
        echo "::set-output name=version::${VERSION#v}"
    - uses: fusion-engineering/setup-git-credentials@v2
      with:
        credentials: ${{ format('https://x-access-token:{0}@github.com/', secrets.GIT_BOT_TOKEN) }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: jenkins-x
        password: ${{ secrets.GHCR_TOKEN }}
    - name: Build and push kubectl
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ./Dockerfile-kubectl
        platforms: linux/amd64,linux/arm64
        push: true
        build-args: |
          VERSION=1.20.2
        tags: |
          ghcr.io/jenkins-x/kubectl:latest
          ghcr.io/jenkins-x/kubectl:1.20.2
    - name: Build and push jx-go
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ./Dockerfile-go
        platforms: linux/amd64
        push: true
        build-args: |
          VERSION=${{ steps.prep.outputs.version }}
        tags: |
          ghcr.io/jenkins-x/jx-go:latest
          ghcr.io/jenkins-x/jx-go:${{ steps.prep.outputs.version }}
    - name: Build and push jx-go-maven
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ./Dockerfile-go-maven
        platforms: linux/amd64
        push: true
        build-args: |
          VERSION=${{ steps.prep.outputs.version }}
        tags: |
          ghcr.io/jenkins-x/jx-go-maven:latest
          ghcr.io/jenkins-x/jx-go-maven:${{ steps.prep.outputs.version }}
    - env:
        GIT_USERNAME: jenkins-x-bot-test
        GITHUB_TOKEN: ${{ secrets.GIT_BOT_TOKEN }}
        VERSION: ${{ steps.prep.outputs.version}}
        XDG_CONFIG_HOME: /github/home/.config
      name: promote-release
      uses: docker://ghcr.io/jenkins-x/jx-updatebot:0.1.3
      with:
        args: pr --git-credentials
"on":
  push:
    branches:
    - main
    - master
